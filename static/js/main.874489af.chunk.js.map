{"version":3,"sources":["assets/images/phoneBear.jpg","components/BackButton.jsx","services/ApiPhoneService.jsx","actions/toolbar.js","actions/phones.js","components/SearcherTextBox.jsx","services/BrowserStorageService.jsx","actions/user.js","components/LoginDialog.jsx","components/SnackbarTimer.jsx","components/UserButton.jsx","components/Toolbar.jsx","components/CardPhone.jsx","views/PhonesAll.jsx","views/PhoneDetail.jsx","views/NotFound.jsx","views/PhonePurchased.jsx","components/Footer.jsx","App.js","serviceWorker.js","assets/styles/theme.js","reducers/toolbar.js","reducers/phones.js","reducers/user.js","reducers/index.js","index.js"],"names":["module","exports","withRouter","props","className","style","visibility","IconButton","size","color","onClick","history","goBack","this","HOME_URL","BASE_URL_PHONE","BASE_URL_USER","page","axios","get","data","id","keywords","email","password","post","then","response","status","userData","catch","name","idUser","idPhone","token","options","headers","idStockProduct","error","productData","newIsBackButton","isBackButton","type","payload","newIsSearchTextBox","isSearchTextBox","newPhonesJSON","phonesJSON","newActivePage","activePage","connect","state","phoneSearchText","toolbar","isBarPagesVisible","phones","dispatch","newPhoneSearchText","newIsBarPagesVisible","getDataPhonesFilteredByKeywords","a","ApiPhoneService","getAllCheapestModelsWithStockPaged","dataPhonesFromApi","content","getPhonesFilteredByKeywords","placeholder","onChange","ev","target","value","onKeyDown","key","dataUser","rememberMe","localStorage","setItem","JSON","stringify","sessionStorage","removeItem","getItem","parse","newShowLoginBox","showLoginBox","newRememberMe","newIsLogged","isLogged","newUser","user","newLastPurchaseRedirect","lastPurchaseRedirect","LoginDialog","onRememberMeChange","aux","onSignInClicked","emailTextBox","passwordTextBox","isRegister","nameTextBox","setState","isEmailOrPasswordWrong","nameWrong","isUserAlredyExist","tryNewRegistry","tryLogin","onCloseLoginDialog","onNewRegisterClicked","tryLogIn","dataUserFromApi","BrowserStorageService","saveUserOnBrowserStorage","saveTokenOnBrowserStorage","Dialog","onClose","aria-labelledby","open","Checkbox","checked","inputProps","Button","variant","Component","SnackBarTimer","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","UserButton","onUserClicked","showUserMenu","onLastPurchaseClick","userStillLoggedShowPurchase","onLogOutClick","userLogOut","location","pathname","window","href","onUserMenuClose","showSnackBar","shouldRememberLastUser","refUserButton","React","createRef","ifExistTokenOnLocalStorage","isValidToken","getToken","getUser","deleteDataLogin","ifExistTokenOnSessionStorage","getLastProductPurchase","ref","aria-label","aria-controls","aria-haspopup","reason","Menu","anchorEl","current","keepMounted","transformOrigin","MenuItem","push","to","src","PhoneBear","alt","CardPhone","phone","model","image","brand","price","PhonesAll","onPageChange","e","pageInfo","getPhonesPagedFromAPI","totalPages","dataProductsFromApi","map","product","textDecoration","Pagination","siblingRange","boundaryRange","length","PhoneDetail","onRadioButtonVersionChange","idProductSelected","parseInt","currentTarget","productsOfModel","filter","productCombination","allProductsCombination","find","x","colorsAvailable","version","colors","onRadioButtonColorChange","onPurchaseButtonClicked","purchasePhone","productSelected","description","versions","purchaseRedirect","getPhoneFromAPI","currentPhoneId","match","params","getAllProductsOfThisModelWithStockOrderedByPrice","dataProductsOfModel","ram","storage","unique","includes","newIsNewPurchase","Radio","fillColorRadioButtons","fillVersionRadioButtons","Fab","isNewPurchase","NotFound","PhonePurchased","dataPhone","lastPhonePurchasedDataRecived","getLastUserPurchaseFromAPI","dataPhoneFromApi","lastPurchaseExist","Footer","App","basename","AppBar","position","path","exact","component","Boolean","hostname","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","red","A400","background","default","INITIAL_STATE","action","combineReducers","store","createStore","RootReducers","applyMiddleware","thunk","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.874489af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/phoneBear.b268748b.jpg\";","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/ArrowBackRounded';\r\n\r\nimport './BackButton.scss';\r\n\r\n\r\n\r\nfunction BackButton(props) {\r\n\r\n  return (\r\n    <div className=\"BackButton\" style={{ visibility: props.visibility }}>\r\n      <IconButton\r\n        size=\"small\" color=\"inherit\"\r\n        onClick={() => props.history.goBack()}>\r\n        <MenuIcon color=\"inherit\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(BackButton);","import axios from 'axios';\r\n\r\nclass ApiPhoneService {\r\n\r\n  constructor() {\r\n    this.HOME_URL = 'https://jgcjordi.github.io/frontendProyectoCreditas/'\r\n    this.BASE_URL_PHONE = 'https://app-backend-creditas.herokuapp.com/api/v1/products';\r\n    this.BASE_URL_USER = 'https://app-backend-creditas.herokuapp.com/api/v1/user';\r\n/*     this.HOME_URL = 'http://localhost:3000';\r\n    this.BASE_URL_PHONE = 'http://localhost:8080/api/v1/products';\r\n    this.BASE_URL_USER = 'http://localhost:8080/api/v1/user'; */\r\n  }\r\n\r\n  async getAllCheapestModelsWithStockPaged(page) {\r\n    const { data } = await axios.get(\r\n      `${this.BASE_URL_PHONE}/allCheapestModelsWithStockPaged/${page}`,\r\n    );\r\n    return data;\r\n  }\r\n\r\n  async getAllProductsOfThisModelWithStockOrderedByPrice(id) {\r\n    const { data } = await axios.get(\r\n      `${this.BASE_URL_PHONE}/allProductsOfThisModelWithStockOrderedByPrice/${id}`,\r\n    );\r\n    return data;\r\n  }\r\n\r\n  async getPhonesFilteredByKeywords(keywords) {\r\n    const { data } = await axios.get(\r\n      `${this.BASE_URL_PHONE}/phones?search=${keywords}`,\r\n    );\r\n    return data;\r\n  }\r\n\r\n  async tryLogIn(email, password) {\r\n    let status\r\n    let userData\r\n    await axios.post(\r\n      `${this.BASE_URL_USER}/login`, {\r\n      email: `${email}`,\r\n      password: `${password}`\r\n    }\r\n    ).then(response => {\r\n      if (response.status === 200) {\r\n        status = true\r\n        userData = response.data\r\n      }\r\n    }).catch(response => { status = false });\r\n    if (status) { return userData }\r\n    else { return false }\r\n  }\r\n\r\n  async tryNewRegistry(email, password, name) {\r\n    let status\r\n    let userData\r\n    await axios.post(\r\n      `${this.BASE_URL_USER}/singIn`, {\r\n      email: `${email}`,\r\n      password: `${password}`,\r\n      name: `${name}`\r\n    }\r\n    ).then(response => {\r\n      if (response.status === 200) {\r\n        status = true\r\n        userData = response.data\r\n      }\r\n    }).catch(response => { status = false });\r\n    if (status) { return userData }\r\n    else { return false }\r\n  }\r\n\r\n  async purchasePhone(idUser, idPhone, token) {\r\n    let status = false\r\n    let userData\r\n    const options = {\r\n      headers: { 'Authorization': `${token}` }\r\n    };\r\n    await axios.post(\r\n      `${this.BASE_URL_USER}/logged/purchase`, {\r\n      idUser: `${idUser}`,\r\n      idStockProduct: `${idPhone}`\r\n    }, options\r\n    ).then(response => {\r\n      if (response.status === 200) {\r\n        status = true\r\n        userData = response.data\r\n      }\r\n    }).catch(error => {\r\n      //console.log(error)\r\n    });\r\n    if (status) { return userData }\r\n    else { return false }\r\n  }\r\n\r\n  async isValidToken(token) {\r\n    let status = false\r\n    const options = {\r\n      headers: { 'Authorization': `${token}` }\r\n    };\r\n    await axios.get(\r\n      `${this.BASE_URL_USER}/logged/validToken`, options\r\n    ).then(response => {\r\n      if (response.status === 200) {\r\n        status = true\r\n      }\r\n    }).catch(error => {\r\n      //console.log(error)\r\n    });\r\n    return status\r\n  }\r\n\r\n  async getLastProductPurchase(token) {\r\n    let status = false\r\n    let productData\r\n    const options = {\r\n      headers: { 'Authorization': `${token}` }\r\n    };\r\n    await axios.get(\r\n      `${this.BASE_URL_USER}/logged/getLastPurchase`, options\r\n    ).then(response => {\r\n      if (response.status === 200) {\r\n        status = true\r\n        productData = response.data\r\n      }\r\n    }).catch(error => {\r\n      //console.log(error)\r\n    });\r\n    if (status) { return productData }\r\n    else { return false }\r\n  }\r\n\r\n}\r\n\r\nexport default new ApiPhoneService();\r\n\r\n","export const newIsBackButton =\r\n    (isBackButton) => ({\r\n        type: 'NEW_IS_BACK_BUTTON',\r\n        payload: {\r\n            isBackButton,\r\n        }\r\n    })\r\n\r\nexport const newIsSearchTextBox =\r\n    (isSearchTextBox) => ({\r\n        type: 'NEW_IS_SEARCH_TEXT_BOX',\r\n        payload: {\r\n            isSearchTextBox,\r\n        }\r\n    })\r\n\r\nexport const newPhoneSearchText =\r\n    (phoneSearchText) => ({\r\n        type: 'NEW_PHONE_SEARCH_TEXT',\r\n        payload: {\r\n            phoneSearchText,\r\n        }\r\n    })","export const newPhonesJSON =\r\n    (phonesJSON) => ({\r\n        type: 'NEW_PHONES_JSON',\r\n        payload: {\r\n            phonesJSON,\r\n        }\r\n    })\r\n\r\nexport const newIsBarPagesVisible =\r\n    (isBarPagesVisible) => ({\r\n        type: 'NEW_IS_BAR_PAGES_VISIBLE',\r\n        payload: {\r\n            isBarPagesVisible,\r\n        }\r\n    })\r\n\r\nexport const newActivePage =\r\n    (activePage) => ({\r\n        type: 'NEW_ACTIVE_PAGE',\r\n        payload: {\r\n            activePage,\r\n        }\r\n    })","import React from 'react';\r\n\r\nimport ApiPhoneService from '../services/ApiPhoneService';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { newPhoneSearchText } from '../actions/toolbar';\r\nimport { newPhonesJSON, newIsBarPagesVisible, newActivePage } from '../actions/phones';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport './SearcherTextBox.scss';\r\n\r\n\r\n\r\nfunction SearcherTextBox(props) {\r\n\r\n    const getDataPhonesFilteredByKeywords = async () => {\r\n        if (props.phoneSearchText === \"\") {\r\n            const dataPhonesFromApi = await ApiPhoneService.getAllCheapestModelsWithStockPaged(0);\r\n            props.newPhonesJSON(dataPhonesFromApi.content)\r\n            props.newIsBarPagesVisible(true)\r\n            props.newActivePage(1)\r\n        } else {\r\n            const dataPhonesFromApi = await ApiPhoneService.getPhonesFilteredByKeywords(props.phoneSearchText);\r\n            props.newPhonesJSON(dataPhonesFromApi)\r\n            props.newPhoneSearchText(\"\")\r\n            props.newIsBarPagesVisible(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"SearcherTextBox\" style={{ visibility: props.visibility }}>\r\n                <div className=\"searchIcon\">\r\n                    <SearchIcon/>\r\n                </div>\r\n            <input\r\n                className=\"textBoxSearch\"\r\n                type=\"text\"\r\n                placeholder=\"Mobile Phone...\"\r\n                onChange={(ev) => props.newPhoneSearchText(ev.target.value)}\r\n                onKeyDown={(ev) => ev.key === 'Enter' && getDataPhonesFilteredByKeywords()}\r\n                value={props.phoneSearchText}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    phoneSearchText: state.toolbar.phoneSearchText,\r\n    isBarPagesVisible: state.phones.isBarPagesVisible\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    newPhoneSearchText: (phoneSearchText) => dispatch(newPhoneSearchText(phoneSearchText)),\r\n    newPhonesJSON: (phonesJSON) => dispatch(newPhonesJSON(phonesJSON)),\r\n    newIsBarPagesVisible: (isBarPagesVisible) => dispatch(newIsBarPagesVisible(isBarPagesVisible)),\r\n    newActivePage: (activePage) => dispatch(newActivePage(activePage))\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearcherTextBox);","\r\nclass BrowserStorageService {\r\n\r\n    saveUserOnBrowserStorage(dataUser, rememberMe) {\r\n        if (rememberMe) {\r\n            localStorage.setItem('User', JSON.stringify(dataUser));\r\n        } else {\r\n            sessionStorage.setItem('User', JSON.stringify(dataUser));\r\n        }\r\n    }\r\n\r\n    saveTokenOnBrowserStorage(token, rememberMe) {\r\n        if (rememberMe) {\r\n            localStorage.setItem('Token', token);\r\n        } else {\r\n            sessionStorage.setItem('Token', token);\r\n        }\r\n    }\r\n\r\n    deleteDataLogin(rememberMe) {\r\n        if (rememberMe) {\r\n            localStorage.removeItem('User');\r\n            localStorage.removeItem('Token');\r\n        } else {\r\n            sessionStorage.removeItem('User');\r\n            sessionStorage.removeItem('Token');\r\n        }\r\n    }\r\n\r\n    getToken(rememberMe) {\r\n        if (rememberMe) {\r\n            return localStorage.getItem('Token')\r\n        } else {\r\n            return sessionStorage.getItem('Token')\r\n        }\r\n    }\r\n\r\n    getUser(rememberMe) {\r\n        if (rememberMe) {\r\n            return  JSON.parse(localStorage.getItem('User'))\r\n        } else {\r\n            return JSON.parse(sessionStorage.getItem('User'))\r\n        }\r\n    }\r\n\r\n    ifExistTokenOnLocalStorage() {\r\n        return localStorage.getItem('Token') === null ? false : true\r\n    }\r\n\r\n    ifExistTokenOnSessionStorage() {\r\n        return sessionStorage.getItem('Token') === null ? false : true\r\n    }\r\n}\r\n\r\nexport default new BrowserStorageService();\r\n","export const newShowLoginBox =\r\n    (showLoginBox) => ({\r\n        type: 'NEW_SHOW_LOGIN_BOX',\r\n        payload: {\r\n            showLoginBox,\r\n        }\r\n    })\r\n\r\nexport const newRememberMe =\r\n    (rememberMe) => ({\r\n        type: 'NEW_REMEMBER_ME',\r\n        payload: {\r\n            rememberMe,\r\n        }\r\n    })\r\n\r\nexport const newIsLogged =\r\n    (isLogged) => ({\r\n        type: 'NEW_IS_LOGGED',\r\n        payload: {\r\n            isLogged,\r\n        }\r\n    })\r\n\r\nexport const newUser =\r\n    (user) => ({\r\n        type: 'NEW_USER',\r\n        payload: {\r\n            user,\r\n        }\r\n    })\r\n\r\nexport const newLastPurchaseRedirect =\r\n    (lastPurchaseRedirect) => ({\r\n        type: 'NEW_LAST_PURCHASE_REDIRECT',\r\n        payload: {\r\n            lastPurchaseRedirect,\r\n        }\r\n    })\r\n\r\nexport const newIsNewPurchase =\r\n    (isNewPurchase) => ({\r\n        type: 'NEW_IS_NEW_PURCHASE',\r\n        payload: {\r\n            isNewPurchase,\r\n        }\r\n    })","import React, { Component } from 'react';\r\n\r\nimport ApiPhoneService from '../services/ApiPhoneService';\r\nimport BrowserStorageService from '../services/BrowserStorageService';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    newShowLoginBox, newRememberMe,\r\n    newIsLogged, newUser\r\n} from '../actions/user';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport './LoginDialog.scss';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass LoginDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emailTextBox: \"\",\r\n            nameTextBox: \"\",\r\n            passwordTextBox: \"\",\r\n            isEmailOrPasswordWrong: false,\r\n\r\n            isRegister: false,\r\n            isUserAlredyExist: false,\r\n            nameWrong: false,\r\n        };\r\n    }\r\n\r\n\r\n    ////////////////METHODS////////////\r\n\r\n\r\n    async tryLogin() {\r\n        const dataUserFromApi = await ApiPhoneService.tryLogIn(this.state.emailTextBox, this.state.passwordTextBox);\r\n        if (dataUserFromApi) {\r\n            this.props.newUser(dataUserFromApi)\r\n            BrowserStorageService.saveUserOnBrowserStorage(dataUserFromApi, this.props.rememberMe)\r\n            BrowserStorageService.saveTokenOnBrowserStorage(dataUserFromApi.password, this.props.rememberMe)\r\n\r\n            this.props.newIsLogged(true)\r\n            this.props.newShowLoginBox(false)\r\n            this.setState({ isEmailOrPasswordWrong: false })\r\n        } else {\r\n            this.setState({ isEmailOrPasswordWrong: true })\r\n        }\r\n    }\r\n\r\n    async tryNewRegistry() {\r\n        const dataUserFromApi = await ApiPhoneService.tryNewRegistry(\r\n            this.state.emailTextBox,\r\n            this.state.passwordTextBox,\r\n            this.state.nameTextBox);\r\n        if (dataUserFromApi) {\r\n            this.props.newUser(dataUserFromApi)\r\n            BrowserStorageService.saveUserOnBrowserStorage(dataUserFromApi, this.props.rememberMe)\r\n            BrowserStorageService.saveTokenOnBrowserStorage(dataUserFromApi.password, this.props.rememberMe)\r\n            this.props.newIsLogged(true)\r\n            this.props.newShowLoginBox(false)\r\n            this.setState({\r\n                isEmailOrPasswordWrong: false,\r\n                isRegister: false,\r\n                isUserAlredyExist: false,\r\n                nameWrong: false\r\n            })\r\n        } else {\r\n            this.setState({ isUserAlredyExist: true })\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////LISTENERS////////////\r\n\r\n    onRememberMeChange = () => {\r\n        let aux = !this.props.rememberMe\r\n        this.props.newRememberMe(aux)\r\n    }\r\n\r\n    onSignInClicked = () => {\r\n        if (this.state.emailTextBox !== \"\" && this.state.passwordTextBox !== \"\") {\r\n            if (this.state.isRegister) {\r\n                if (this.state.nameTextBox !== \"\") {\r\n                    this.setState({\r\n                        isEmailOrPasswordWrong: false,\r\n                        nameWrong: false,\r\n                        isUserAlredyExist: false\r\n                    })\r\n                    this.tryNewRegistry()\r\n\r\n                } else {\r\n                    this.setState({ \r\n                        nameWrong: true,\r\n                        isEmailOrPasswordWrong: false,\r\n                        isUserAlredyExist: false\r\n                     })\r\n                }\r\n            } else {\r\n                this.setState({ isEmailOrPasswordWrong: false })\r\n                this.tryLogin()\r\n            }\r\n        } else {\r\n            this.setState({\r\n                isEmailOrPasswordWrong: true,\r\n                nameWrong: false,\r\n                isUserAlredyExist: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    onCloseLoginDialog = () => {\r\n        this.props.newShowLoginBox(false)\r\n        this.setState({\r\n            isEmailOrPasswordWrong: false,\r\n            isRegister: false,\r\n            isUserAlredyExist: false,\r\n            nameWrong: false,\r\n            emailTextBox: \"\",\r\n            nameTextBox: \"\",\r\n            passwordTextBox: \"\",\r\n        })\r\n    };\r\n\r\n    onNewRegisterClicked = () => {\r\n        this.setState({\r\n            emailTextBox: \"\",\r\n            nameTextBox: \"\",\r\n            passwordTextBox: \"\",\r\n            isEmailOrPasswordWrong: false,\r\n            isRegister: true,\r\n        })\r\n    }\r\n\r\n\r\n    ////////////////RENDER////////////\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.onCloseLoginDialog} aria-labelledby=\"simple-dialog-title\" open={this.props.showLoginBox}>\r\n                <div className=\"LoginDialog\">\r\n                    <div className=\"boxLogin\">\r\n                        <form className=\"login-form\">\r\n                            <div className=\"login-title\">Login</div>\r\n                            <input\r\n                                className=\"textBoxLogin\"\r\n                                type=\"text\"\r\n                                placeholder=\"Email\"\r\n                                onChange={(ev) => this.setState({ emailTextBox: ev.target.value })}\r\n                                value={this.state.emailTextBox}\r\n                                onKeyDown={(ev) => ev.key === 'Enter' && this.onSignInClicked()}\r\n                            />\r\n                            {this.state.isRegister &&\r\n                                <input\r\n                                    className=\"textBoxLogin\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                    onChange={(ev) => this.setState({ nameTextBox: ev.target.value })}\r\n                                    value={this.state.nameTextBox}\r\n                                    onKeyDown={(ev) => ev.key === 'Enter' && this.onSignInClicked()}\r\n                                />\r\n                            }\r\n\r\n                            <input\r\n                                className=\"textBoxLogin\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={(ev) => this.setState({ passwordTextBox: ev.target.value })}\r\n                                value={this.state.passwordTextBox}\r\n                                onKeyDown={(ev) => ev.key === 'Enter' && this.onSignInClicked()}\r\n                            />\r\n                        </form>\r\n                        <div className=\"sign-in\">\r\n                            <div>\r\n                                <Checkbox\r\n                                    checked={this.props.rememberMe}\r\n                                    onChange={this.onRememberMeChange}\r\n                                    color=\"secondary\"\r\n                                    inputProps={{\r\n                                        'aria-label': 'checkbox remember-me',\r\n                                    }}\r\n                                />\r\n                                Remember me\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"primary\" className=\"buttonSignIn\" onClick={this.onSignInClicked}>\r\n                                {this.state.isRegister ? \"Sign in\" : \"Login\"}\r\n                            </Button>\r\n                        </div>\r\n                        {!this.state.isRegister &&\r\n                            <div className=\"sing-up-new\">\r\n                                New?\r\n                            <span onClick={this.onNewRegisterClicked}>Sing Up</span>\r\n                            </div>\r\n                        }\r\n                        {this.state.isEmailOrPasswordWrong &&\r\n                            <h6>Email or password is wrong</h6>}\r\n                        {this.state.nameWrong &&\r\n                            <h6>Name is wrong</h6>}\r\n                        {this.state.isUserAlredyExist &&\r\n                            <h6>User already exist</h6>}\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n////////////////REDUX////////////\r\n\r\nconst mapStateToProps = state => ({\r\n    showLoginBox: state.user.showLoginBox,\r\n    isLogged: state.user.isLogged,\r\n    rememberMe: state.user.rememberMe,\r\n    user: state.user.user,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    newRememberMe: (rememberMe) => dispatch(newRememberMe(rememberMe)),\r\n    newIsLogged: (isLogged) => dispatch(newIsLogged(isLogged)),\r\n    newShowLoginBox: (showLoginBox) => dispatch(newShowLoginBox(showLoginBox)),\r\n    newUser: (user) => dispatch(newUser(user)),\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(LoginDialog);\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\n\r\n\r\nfunction SnackBarTimer(props) {\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}\r\n      open={props.open}\r\n      autoHideDuration={2500}\r\n      onClose={props.onClose}\r\n      ContentProps={{\r\n        'aria-describedby': 'message-no-purchases',\r\n      }}\r\n      message={<span id=\"message-id\">{props.message}</span>}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SnackBarTimer","import React, { Component } from 'react';\r\n\r\nimport LoginDialog from './LoginDialog';\r\nimport SnackBarTimer from './SnackbarTimer';\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ApiPhoneService from '../services/ApiPhoneService';\r\nimport BrowserStorageService from '../services/BrowserStorageService';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    newShowLoginBox, newRememberMe,\r\n    newIsLogged, newUser, newLastPurchaseRedirect\r\n} from '../actions/user';\r\n\r\nimport './UserButton.scss';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\n\r\n\r\n\r\n\r\nclass UserButton extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showSnackBar: false,\r\n            showUserMenu: false,\r\n        };\r\n        this.shouldRememberLastUser()\r\n\r\n        this.refUserButton = React.createRef();\r\n    }\r\n\r\n\r\n    ////////////////METHODS////////////\r\n\r\n    async shouldRememberLastUser() {\r\n        if (BrowserStorageService.ifExistTokenOnLocalStorage()) {\r\n            if (await ApiPhoneService.isValidToken(BrowserStorageService.getToken(true))) {\r\n                this.props.newUser(BrowserStorageService.getUser(true))\r\n                this.props.newIsLogged(true)\r\n                this.props.newRememberMe(true)\r\n            } else {\r\n                BrowserStorageService.deleteDataLogin(true)\r\n            }\r\n        } else if (BrowserStorageService.ifExistTokenOnSessionStorage()) {\r\n            if (await ApiPhoneService.isValidToken(BrowserStorageService.getToken(false))) {\r\n                this.props.newUser(BrowserStorageService.getUser(false))\r\n                this.props.newIsLogged(true)\r\n            } else {\r\n                BrowserStorageService.deleteDataLogin(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    async userStillLoggedShowPurchase() {\r\n        if (await ApiPhoneService.isValidToken(BrowserStorageService.getToken(this.props.rememberMe))) {\r\n            if (await ApiPhoneService.getLastProductPurchase(BrowserStorageService.getToken(this.props.rememberMe))) {\r\n                this.props.newLastPurchaseRedirect(true)\r\n            } else {\r\n                this.setState({ showSnackBar: true })\r\n            }\r\n        } else {\r\n            BrowserStorageService.deleteDataLogin(this.props.rememberMe)\r\n            this.props.newRememberMe(false)\r\n            this.props.newIsLogged(false)\r\n            this.props.newShowLoginBox(true)\r\n        }\r\n\r\n    }\r\n\r\n    userLogOut() {\r\n        BrowserStorageService.deleteDataLogin(this.props.rememberMe)\r\n        this.props.newIsLogged(false)\r\n        this.props.newRememberMe(false)\r\n    }\r\n\r\n\r\n    ////////////////LISTENERS////////////\r\n    onUserClicked = () => {\r\n        if (this.props.isLogged) {\r\n            this.setState({ showUserMenu: true })\r\n        } else {\r\n            this.props.newShowLoginBox(true)\r\n        }\r\n    }\r\n\r\n    onLastPurchaseClick = () => {\r\n        this.setState({showUserMenu: false})\r\n        this.userStillLoggedShowPurchase()\r\n    }\r\n\r\n    onLogOutClick = () => {\r\n        this.setState({showUserMenu: false})\r\n        this.userLogOut()\r\n        if (this.props.location.pathname === \"/purchased\") {\r\n            window.location.href=ApiPhoneService.HOME_URL\r\n        }\r\n    }\r\n\r\n    onUserMenuClose = () => {\r\n        this.setState({showUserMenu: false})\r\n    }\r\n\r\n\r\n    ////////////////RENDER////////////\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"UserButton\" ref={this.refUserButton}>\r\n                <IconButton\r\n                    className=\"userIcon\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"menu-appbar\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={this.onUserClicked}\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <LoginDialog />\r\n                <SnackBarTimer\r\n                    className=\"snackBar\"\r\n                    open={this.state.showSnackBar}\r\n                    onClose={(ev, reason) => this.setState({ showSnackBar: false })}\r\n                    message=\"You have not bought anything yet\" />\r\n                <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={this.refUserButton.current}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={this.state.showUserMenu}\r\n                    onClose={this.onUserMenuClose}\r\n                >\r\n                    {!(this.props.location.pathname === \"/purchased\") && <MenuItem onClick={this.onLastPurchaseClick}>Last Purchase</MenuItem>}\r\n                    <MenuItem onClick={this.onLogOutClick}>Logout</MenuItem>\r\n                </Menu>\r\n                {this.props.lastPurchaseRedirect && <Redirect push to=\"/purchased\" />}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n////////////////REDUX////////////\r\n\r\nconst mapStateToProps = state => ({\r\n    showLoginBox: state.user.showLoginBox,\r\n    isLogged: state.user.isLogged,\r\n    rememberMe: state.user.rememberMe,\r\n    user: state.user.user,\r\n    lastPurchaseRedirect: state.user.lastPurchaseRedirect\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    newShowLoginBox: (showLoginBox) => dispatch(newShowLoginBox(showLoginBox)),\r\n    newIsLogged: (isLogged) => dispatch(newIsLogged(isLogged)),\r\n    newRememberMe: (rememberMe) => dispatch(newRememberMe(rememberMe)),\r\n    newUser: (user) => dispatch(newUser(user)),\r\n    newLastPurchaseRedirect: (lastPurchaseRedirect) => dispatch(newLastPurchaseRedirect(lastPurchaseRedirect))\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(UserButton));\r\n","import React from 'react';\r\nimport BackButton from './BackButton';\r\nimport SearcherTextBox from './SearcherTextBox';\r\nimport UserButton from './UserButton';\r\nimport { connect } from 'react-redux';\r\nimport './Toolbar.scss';\r\nimport PhoneBear from '../assets/images/phoneBear.jpg'\r\nimport ApiPhoneService from '../services/ApiPhoneService';\r\n\r\n\r\n\r\n\r\nfunction Toolbar(props) {\r\n\r\n  return (\r\n    <div className=\"Toolbar\">\r\n      <BackButton visibility={props.isBackButton ? 'visible' : 'hidden'} />\r\n      <a className=\"linkLogo\" href={ApiPhoneService.HOME_URL}>\r\n        <img className=\"logo\" src={PhoneBear} alt=\"Phone Bear logo\"></img>\r\n      </a>\r\n      <SearcherTextBox visibility={props.isSearchTextBox ? 'visible' : 'hidden'} />\r\n      <UserButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isBackButton: state.toolbar.isBackButton,\r\n  isSearchTextBox: state.toolbar.isSearchTextBox\r\n})\r\n\r\nexport default connect(mapStateToProps)(Toolbar);\r\n","import React from 'react';\r\nimport './CardPhone.scss';\r\n\r\n\r\nfunction CardPhone({ phone }) {\r\n    return (\r\n        <div className=\"CardPhone\">\r\n            <img className=\"imagePhone\" src={phone.model.image} alt=\"Phone\" />\r\n            <div className=\"body-card\">\r\n                <div className=\"brand-model\">\r\n                    <div className=\"brand\">{`${phone.brand.name}`}</div>\r\n                    <div className=\"model\">{` ${phone.model.name}`}</div>\r\n                </div>\r\n                <div className=\"price\">{`${phone.price}€`}</div>\r\n                <div className=\"seeProduct\">SEE PRODUCT</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardPhone;","import React, { Component } from 'react';\r\nimport ApiPhoneService from '../services/ApiPhoneService';\r\nimport { Link } from 'react-router-dom';\r\nimport CardPhone from '../components/CardPhone';\r\nimport './PhonesAll.scss';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { newIsBackButton, newIsSearchTextBox } from '../actions/toolbar';\r\nimport { newPhonesJSON, newActivePage } from '../actions/phones';\r\n\r\nimport { Pagination } from \"semantic-ui-react\";\r\n// import 'semantic-ui-css/semantic.min.css'\r\n\r\n\r\n\r\nclass PhonesAll extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalPages: 0,\r\n        };\r\n\r\n        ///Components to Render in Toolbar\r\n        this.props.newIsBackButton(false)\r\n        this.props.newIsSearchTextBox(true)\r\n\r\n\r\n        //this.getDataAllPhonesFromAPI()\r\n        this.getPhonesPagedFromAPI(this.props.activePage-1)\r\n\r\n    }\r\n\r\n\r\n\r\n    ////////////////METHODS////////////\r\n\r\n    async getPhonesPagedFromAPI(page) {\r\n        const dataProductsFromApi = await ApiPhoneService.getAllCheapestModelsWithStockPaged(page);\r\n        this.props.newPhonesJSON(dataProductsFromApi.content)\r\n        this.setState({ totalPages: dataProductsFromApi.totalPages });\r\n    }\r\n\r\n    ////////////////LISTENERS////////////\r\n\r\n    onPageChange = (e, pageInfo) => {\r\n        this.getPhonesPagedFromAPI(pageInfo.activePage - 1)\r\n        this.props.newActivePage(pageInfo.activePage)\r\n    }\r\n\r\n\r\n    ////////////////RENDER////////////\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PhonesAll\">\r\n                <div className='phonesList'>\r\n                    {this.props.phonesJSON.map(product => (\r\n                        <div key={product.model.id}>\r\n                            <div className='phoneCardLink'>\r\n                                <Link to={'/phone/' + product.model.id} key={product.model.id} style={{textDecoration: \"none\"}}>\r\n                                    <CardPhone phone={product} key={product.model.id} />\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {this.props.isBarPagesVisible &&\r\n                    <div className='paginationBar'>\r\n                        <Pagination\r\n                            activePage={this.props.activePage}\r\n                            onPageChange={this.onPageChange}\r\n                            totalPages={this.state.totalPages}\r\n                            siblingRange={0}\r\n                            boundaryRange={1}\r\n                        />\r\n                    </div>\r\n                }\r\n                {this.props.phonesJSON.length === 0 &&\r\n                    <div>No results found for that search.</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n////////////////REDUX////////////\r\n\r\nconst mapStateToProps = state => ({\r\n    isBackButton: state.toolbar.isBackButton,\r\n    isSearchTextBox: state.toolbar.isSearchTextBox,\r\n    phoneSearchText: state.toolbar.phoneSearchText,\r\n    phonesJSON: state.phones.phonesJSON,\r\n    isBarPagesVisible: state.phones.isBarPagesVisible,\r\n    activePage: state.phones.activePage\r\n\r\n\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    newIsBackButton: (isBackButton) => dispatch(newIsBackButton(isBackButton)),\r\n    newIsSearchTextBox: (isSearchTextBox) => dispatch(newIsSearchTextBox(isSearchTextBox)),\r\n    newPhonesJSON: (phonesJSON) => dispatch(newPhonesJSON(phonesJSON)),\r\n    newActivePage: (activePage) => dispatch(newActivePage(activePage))\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonesAll);\r\n","import React, { Component } from 'react';\r\nimport ApiPhoneService from '../services/ApiPhoneService';\r\nimport BrowserStorageService from '../services/BrowserStorageService';\r\n\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { newIsBackButton, newIsSearchTextBox } from '../actions/toolbar';\r\nimport { newShowLoginBox, newUser, newIsLogged, newRememberMe, newIsNewPurchase } from '../actions/user';\r\n\r\nimport './PhoneDetail.scss';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n\r\n\r\n\r\nclass PhoneDetail extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      productsOfModel: [],\r\n      productSelected: [],\r\n\r\n      src: \"\",\r\n      brand: \"\",\r\n      model: \"\",\r\n      description: \"\",\r\n      price: 0,\r\n      version: 0,\r\n      color: \"\",\r\n\r\n      allProductsCombination: [],\r\n      versions: [],\r\n      colors: [],\r\n\r\n\r\n      purchaseRedirect: false,\r\n    };\r\n\r\n    ///Components to Render in Toolbar\r\n    this.props.newIsBackButton(true)\r\n    this.props.newIsSearchTextBox(false)\r\n\r\n\r\n    this.getPhoneFromAPI()\r\n  }\r\n\r\n\r\n\r\n  ////////////////METHODS////////////\r\n\r\n  async getPhoneFromAPI() {\r\n    const currentPhoneId = this.props.match.params.id;\r\n    const dataProductsOfModel = await ApiPhoneService.getAllProductsOfThisModelWithStockOrderedByPrice(currentPhoneId);\r\n\r\n    //Get array whit all versions\r\n    const allProductsCombination = dataProductsOfModel.map(x => {\r\n      let version = {\r\n        id: x.id,\r\n        version: `${x.ram.value} GB · ${x.storage.value} GB`,\r\n        color: x.color.name\r\n      }\r\n      return version\r\n    })\r\n\r\n    //Delete duplicated ram-storage\r\n    let unique = []\r\n    const versions = allProductsCombination.filter(x => {\r\n      if (unique.includes(x.version)) {\r\n        return false\r\n      } else {\r\n        unique.push(x.version)\r\n        return true\r\n      }\r\n    })\r\n\r\n    const colors = allProductsCombination.filter(x => x.version === allProductsCombination[0].version)\r\n\r\n    this.setState({\r\n      productsOfModel: dataProductsOfModel,\r\n      productSelected: dataProductsOfModel[0],\r\n\r\n      brand: dataProductsOfModel[0].brand.name,\r\n      src: dataProductsOfModel[0].model.image,\r\n      model: dataProductsOfModel[0].model.name,\r\n      description: dataProductsOfModel[0].model.description,\r\n      price: dataProductsOfModel[0].price,\r\n      version: dataProductsOfModel[0].id,\r\n      color: dataProductsOfModel[0].id,\r\n\r\n      allProductsCombination: allProductsCombination,\r\n      versions: versions,\r\n      colors: colors\r\n    })\r\n  }\r\n\r\n  async purchasePhone() {\r\n    const dataUserFromApi = await ApiPhoneService.purchasePhone(this.props.user.id, this.state.color,\r\n      BrowserStorageService.getToken(this.props.rememberMe));\r\n\r\n    if (dataUserFromApi) {//Purchase Success\r\n      // BrowserStorageService.saveUserOnBrowserStorage(dataUserFromApi, this.props.rememberMe)\r\n      // this.props.newUser(dataUserFromApi)\r\n      this.props.newIsNewPurchase(true)\r\n\r\n      this.setState({ purchaseRedirect: true })\r\n\r\n    } else {//Delete Data User\r\n      BrowserStorageService.deleteDataLogin(this.props.rememberMe)\r\n\r\n      this.props.newRememberMe(false)\r\n      this.props.newIsLogged(false)\r\n      this.props.newShowLoginBox(true)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  ////////////////LISTENERS////////////\r\n\r\n  onRadioButtonVersionChange = (ev) => {\r\n    let idProductSelected = parseInt(ev.currentTarget.value, 10)\r\n    const model = this.state.productsOfModel.filter(model => model.id === idProductSelected)\r\n    const productCombination = this.state.allProductsCombination.find(x => x.id === idProductSelected)\r\n    const colorsAvailable = this.state.allProductsCombination.filter(product => product.version === productCombination.version)\r\n    \r\n    this.setState({\r\n      price: model[0].price,\r\n      version: model[0].id,\r\n      color: model[0].id,\r\n      colors: colorsAvailable\r\n    });\r\n  }\r\n\r\n  onRadioButtonColorChange = (ev) => {\r\n    let idProductSelected = parseInt(ev.currentTarget.value, 10)\r\n    const model = this.state.productsOfModel.filter(model => model.id === idProductSelected)\r\n    this.setState({\r\n      price: model[0].price,\r\n      color: idProductSelected\r\n    });\r\n  }\r\n\r\n  onPurchaseButtonClicked = () => {\r\n    if (this.props.isLogged) {\r\n      this.purchasePhone()\r\n    } else {\r\n      this.props.newShowLoginBox(true)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  ////////////////RENDER////////////\r\n\r\n  fillVersionRadioButtons() {\r\n    return this.state.versions.map(version => (\r\n      <div key={version.id}>\r\n        <Radio\r\n          checked={this.state.version === version.id}\r\n          color=\"secondary\"\r\n          onChange={this.onRadioButtonVersionChange}\r\n          value={version.id}\r\n          name=\"version\"\r\n          inputProps={{ 'aria-label': 'version' }}\r\n        />\r\n        {`${version.version}`}\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  fillColorRadioButtons() {\r\n    return this.state.colors.map(color => (\r\n      <div key={color.id}>\r\n        <Radio\r\n          checked={this.state.color === color.id}\r\n          color=\"secondary\"\r\n          onChange={this.onRadioButtonColorChange}\r\n          value={color.id}\r\n          name=\"color\"\r\n          inputProps={{ 'aria-label': 'color' }}\r\n        />\r\n        {color.color}\r\n      </div>\r\n    ))\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='PhoneDetail'>\r\n        <div className='image-forms'>\r\n          <div className='image-model-price'>\r\n            <img className=\"img-phone\" src={this.state.src} alt=\"Product\" />\r\n            <div className='model-price'>\r\n              <div className='model'>{`${this.state.brand} ${this.state.model}`}</div>\r\n              <div className='price'>{`${this.state.price}€`}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <form>\r\n            <div className=\"title-version\">Color</div>\r\n            {this.fillColorRadioButtons()}\r\n          </form>\r\n\r\n          <form>\r\n            <div className=\"title-version\">RAM · Storage</div>\r\n            {this.fillVersionRadioButtons()}\r\n          </form>\r\n\r\n        </div>\r\n\r\n        <div className=\"data-purchase-btn\" >\r\n          <div className=\"data\">{this.state.description}</div>\r\n          <div className=\"btn-container\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              size=\"large\"\r\n              color=\"secondary\"\r\n              aria-label=\"purchase\"\r\n              className=\"purchase-button\"\r\n              onClick={this.onPurchaseButtonClicked}\r\n            >\r\n              <span className=\"text-name\">PURCHASE</span>\r\n\r\n            </Fab>\r\n          </div>\r\n        </div>\r\n        {this.state.purchaseRedirect && <Redirect push to=\"/purchased\" />}\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n////////////////REDUX////////////\r\n\r\nconst mapStateToProps = state => ({\r\n  isBackButton: state.toolbar.isBackButton,\r\n  isSearchTextBox: state.toolbar.isSearchTextBox,\r\n  isLogged: state.user.isLogged,\r\n  showLoginBox: state.user.showLoginBox,\r\n  user: state.user.user,\r\n  rememberMe: state.user.rememberMe\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  newIsBackButton: (isBackButton) => dispatch(newIsBackButton(isBackButton)),\r\n  newIsSearchTextBox: (isSearchTextBox) => dispatch(newIsSearchTextBox(isSearchTextBox)),\r\n  newShowLoginBox: (showLoginBox) => dispatch(newShowLoginBox(showLoginBox)),\r\n  newIsLogged: (isLogged) => dispatch(newIsLogged(isLogged)),\r\n  newRememberMe: (rememberMe) => dispatch(newRememberMe(rememberMe)),\r\n  newUser: (user) => dispatch(newUser(user)),\r\n  newIsNewPurchase: (isNewPurchase) => dispatch(newIsNewPurchase(isNewPurchase))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneDetail);\r\n","import React from 'react';\r\n\r\n\r\nfunction NotFound () {\r\n    return (\r\n      <div className='NotFound'>\r\n        <h1>NOT FOUND</h1>\r\n        <h1>404</h1>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport ApiPhoneService from '../services/ApiPhoneService';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { newIsBackButton, newIsSearchTextBox } from '../actions/toolbar';\r\nimport { newLastPurchaseRedirect } from '../actions/user';\r\n\r\nimport './PhonePurchased.scss';\r\nimport BrowserStorageService from '../services/BrowserStorageService';\r\n\r\n\r\nclass PhonePurchased extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      phone: [],\r\n      src: \"\",\r\n      brand: \"\",\r\n      model: \"\",\r\n      color: \"\",\r\n      price: 0,\r\n      ram: 0,\r\n      storage: 0,\r\n      dataPhone: \"\",\r\n      \r\n      lastPhonePurchasedDataRecived: false,\r\n    };\r\n\r\n    ///Components to Render in Toolbar\r\n    this.props.newIsBackButton(false)\r\n    this.props.newIsSearchTextBox(false)\r\n    this.props.newLastPurchaseRedirect(false)\r\n\r\n    this.getLastUserPurchaseFromAPI()\r\n  }\r\n\r\n\r\n\r\n  ////////////////METHODS////////////\r\n\r\n  async getLastUserPurchaseFromAPI() {\r\n    const token = BrowserStorageService.getToken(this.props.rememberMe)\r\n    const dataPhoneFromApi = await ApiPhoneService.getLastProductPurchase(token);\r\n    this.setState({\r\n      phone: dataPhoneFromApi,\r\n      src: dataPhoneFromApi.model.image,\r\n      brand: dataPhoneFromApi.brand.name,\r\n      model: dataPhoneFromApi.model.name,\r\n      color: dataPhoneFromApi.color.name,\r\n      price: dataPhoneFromApi.price,\r\n      ram: dataPhoneFromApi.ram.value,\r\n      storage: dataPhoneFromApi.storage.value,\r\n      dataPhone: dataPhoneFromApi.model.description,\r\n      lastPhonePurchasedDataRecived: true\r\n    })\r\n  }\r\n\r\n  lastPurchaseExist() {\r\n    return <div>\r\n      <h2 className=\"congratulations\">\r\n        {this.props.isNewPurchase ? \"Congratulations \" : \"Hi, \"}\r\n        {this.props.user.name}</h2>\r\n      <h5 className=\"phonePurchased\">\r\n        {this.props.isNewPurchase ? \"You have purchased a new phone! \" : \"This is your last phone purchased: \"}</h5>\r\n      <div className=\"dataPhone\">\r\n        <img className=\"imgPhone\" src={this.state.src} alt=\"Phone Purchased\" />\r\n        <div className=\"allDataText\">\r\n          <div className=\"model-price\">\r\n            <div>{this.state.brand} {this.state.model}</div>\r\n            <div className=\"price\">{this.state.price}€</div>\r\n          </div>\r\n          <div className=\"features\">Color: {this.state.color} - RAM: {this.state.ram}GB · Storage: {this.state.storage}GB</div>\r\n          <div>{this.state.dataPhone}</div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  }\r\n\r\n\r\n  ////////////////RENDER////////////\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='PhonePurchased'>\r\n        {this.state.lastPhonePurchasedDataRecived && this.lastPurchaseExist()}\r\n      </div >\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\n////////////////REDUX////////////\r\n\r\nconst mapStateToProps = state => ({\r\n  isBackButton: state.toolbar.isBackButton,\r\n  isSearchTextBox: state.toolbar.isSearchTextBox,\r\n  user: state.user.user,\r\n  lastPurchaseRedirect: state.user.lastPurchaseRedirect,\r\n  isNewPurchase: state.user.isNewPurchase,\r\n  rememberMe: state.user.rememberMe\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  newIsBackButton: (isBackButton) => dispatch(newIsBackButton(isBackButton)),\r\n  newIsSearchTextBox: (isSearchTextBox) => dispatch(newIsSearchTextBox(isSearchTextBox)),\r\n  newLastPurchaseRedirect: (lastPurchaseRedirect) => dispatch(newLastPurchaseRedirect(lastPurchaseRedirect))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonePurchased);\r\n","import React from 'react';\r\nimport './Footer.scss';\r\n\r\n\r\nfunction Footer(props) {\r\n\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <div className=\"copyright\">\r\n        <p className=\"copyright-text\">Copyright &copy; 2019 Phone Bear Spain S.L. All Rights Reserved.</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.css';\n\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Toolbar from './components/Toolbar';\nimport PhonesAll from './views/PhonesAll';\nimport PhoneDetail from './views/PhoneDetail';\nimport NotFound from './views/NotFound';\nimport PhonePurchased from './views/PhonePurchased';\nimport Footer from './components/Footer';\nimport AppBar from '@material-ui/core/AppBar';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename='/'>\n        <AppBar position=\"static\">\n          <Toolbar />\n        </AppBar>\n        <Switch>\n          <Route path=\"/phones\" exact component={PhonesAll} />\n          <Route path=\"/phone/:id\" exact component={PhoneDetail} />\n          <Route path=\"/purchased\" exact component={PhonePurchased} />\n          <Redirect path='/' to='phones' />\n          <Route component={NotFound} />\n        </Switch>\n        <Footer />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#D7CCC8',\r\n            main: '#795548',\r\n            dark: '#5D4037',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            main: '#64dd17',\r\n        },\r\n\r\n        error: {\r\n            main: red.A400,\r\n        },\r\n        background: {\r\n            default: '#fff',\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme;\r\n//#795548\r\n//#03A9F4","const INITIAL_STATE = {\r\n    isBackButton: true,\r\n    isSearchTextBox: true,\r\n    phoneSearchText: \"\",\r\n}\r\n\r\n/////REDUCER WITH HIS ACTIONS/////\r\nconst toolbar = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'NEW_IS_BACK_BUTTON':\r\n            return {\r\n                ...state,\r\n                isBackButton: action.payload.isBackButton,\r\n            }\r\n\r\n        case 'NEW_IS_SEARCH_TEXT_BOX':\r\n            return {\r\n                ...state,\r\n                isSearchTextBox: action.payload.isSearchTextBox,\r\n            }\r\n\r\n        case 'NEW_PHONE_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                phoneSearchText: action.payload.phoneSearchText,\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default toolbar;","const INITIAL_STATE = {\r\n    phonesJSON: [],\r\n    isBarPagesVisible: true,\r\n    activePage: 1\r\n}\r\n\r\n/////REDUCER WITH HIS ACTIONS/////\r\nconst phones = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'NEW_PHONES_JSON':\r\n            return {\r\n                ...state,\r\n                phonesJSON: action.payload.phonesJSON,\r\n            }\r\n        case 'NEW_IS_BAR_PAGES_VISIBLE':\r\n            return {\r\n                ...state,\r\n                isBarPagesVisible: action.payload.isBarPagesVisible,\r\n            }\r\n        case 'NEW_ACTIVE_PAGE':\r\n            return {\r\n                ...state,\r\n                activePage: action.payload.activePage,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default phones;","const INITIAL_STATE = {\r\n    showLoginBox: false,\r\n    isLogged: false,\r\n    rememberMe: false,\r\n    user: [],\r\n    lastPurchaseRedirect: false,\r\n    isNewPurchase: false,\r\n}\r\n\r\n/////REDUCER WITH HIS ACTIONS/////\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'NEW_SHOW_LOGIN_BOX':\r\n            return {\r\n                ...state,\r\n                showLoginBox: action.payload.showLoginBox,\r\n            }\r\n        case 'NEW_REMEMBER_ME':\r\n            return {\r\n                ...state,\r\n                rememberMe: action.payload.rememberMe,\r\n            }\r\n        case 'NEW_IS_LOGGED':\r\n            return {\r\n                ...state,\r\n                isLogged: action.payload.isLogged,\r\n            }\r\n        case 'NEW_USER':\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n            }\r\n        case 'NEW_LAST_PURCHASE_REDIRECT':\r\n            return {\r\n                ...state,\r\n                lastPurchaseRedirect: action.payload.lastPurchaseRedirect,\r\n            }\r\n        case 'NEW_IS_NEW_PURCHASE':\r\n            return {\r\n                ...state,\r\n                isNewPurchase: action.payload.isNewPurchase,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","import { combineReducers } from 'redux'\r\n\r\n//Dependencias de Reducers\r\nimport toolbar from './toolbar'\r\nimport phones from './phones'\r\nimport user from './user'\r\n\r\n\r\n//Exportamos CombineReducers donde alojaremos todos los reducers\r\nexport default combineReducers({\r\n    toolbar,\r\n    phones,\r\n    user\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './assets/styles/theme.js';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\n\n//Redux for React\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n//Reducers from index.js\nimport RootReducers from './reducers';\n//Store from Reducers\nconst store = createStore(RootReducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n        <App />\n        </ThemeProvider>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}